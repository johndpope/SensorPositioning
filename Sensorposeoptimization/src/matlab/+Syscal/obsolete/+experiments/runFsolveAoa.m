%%
%scal = syscal.eval.createRunParameters(1, [0 0], [0.15 0.15 7*pi/180]);
%scal = syscal.eval.createRunParameters('tcqw1', 'rnd', [2.5 2.5], [0.5 0.5 20*pi/180]);
%scal = syscal.eval.createRunParameters('tcqw1', 'rnd', {'room', ''}, [0.5 0.5 20*pi/180]);
scal = syscal.eval.createRunParameters('tcaw1', 'rnd', {'room', ''}, [0.5 0.5 20*pi/180]);
scal.userData.plotState = true;

fun = @(x) syscal.calcStateAoaTan(x, scal);

opt = optimset('display', 'iter'...
  , 'maxfunevals', 2000*numel(scal.stateCurrent) ...
  , 'maxiter', 2000*numel(scal.stateCurrent) ...
    , 'plotfcns', @optimplotfval... 
    , 'tolfun', 1e-8...
    , 'tolx', 1e-8...
    , 'Jacobian', 'on'...
    , 'Algorithm', 'trust-region-reflective'...
...    , 'Algorithm', {'levenberg-marquardt', 0.01'}...
    , 'DiffMaxChange', 1 ...
    , 'DiffMinChange', 1e-3 ...
    );

P.objective = fun;
P.x0 = scal.stateCurrent;
P.options = opt;
P.solver = 'fsolve';

[state, fval, exitflag, output ] = fsolve(P);
